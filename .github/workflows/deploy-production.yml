name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Deployment reason'
        required: true
        default: 'Manual deployment'

concurrency:
  group: production-deployment
  cancel-in-progress: false

jobs:
  pre-deploy-checks:
    name: Pre-deployment Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run all tests
        run: |
          npm test -- --run --coverage
          npx playwright install --with-deps
          npm run test:e2e || echo "E2E tests skipped"
        env:
          CI: true

      - name: Security audit
        run: npm audit --production || echo "Security warnings detected"
        continue-on-error: true

      - name: Build verification
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: https://api.context8.io
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: production-build
          path: .next/
          retention-days: 7

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: pre-deploy-checks
    environment:
      name: production
      url: https://context8.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: production-build
          path: .next/

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          alias-domains: |
            context8.io
            www.context8.io

      - name: Post deployment notification
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deploymentUrl = '${{ steps.deploy.outputs.preview-url }}';
            const message = `ðŸš€ **Production Deployment Successful**

            **Environment**: Production
            **Branch**: \`${context.ref}\`
            **Commit**: \`${context.sha.substring(0, 7)}\`
            **Deployed by**: @${context.actor}
            **Reason**: ${{ github.event.inputs.reason || 'Push to main' }}

            **URLs**:
            - https://context8.io
            - https://www.context8.io

            **Vercel Dashboard**: https://vercel.com/${context.repo.owner}/${context.repo.repo}
            `;

            // Create deployment
            await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              description: '${{ github.event.inputs.reason || 'Automated deployment' }}',
              auto_merge: false,
              required_contexts: []
            });

            console.log(message);

  post-deploy-tests:
    name: Post-deployment Verification
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Health check
        run: |
          echo "Running health checks on production..."
          curl -f https://context8.io || exit 1
          curl -f https://www.context8.io || exit 1

      - name: API smoke tests
        run: |
          echo "Testing API endpoints..."
          curl -f https://context8.io/api/crypto-prices | jq '.success' || exit 1

      - name: Performance check
        run: |
          echo "Checking page load time..."
          time curl -w "@-" -o /dev/null -s https://context8.io << 'EOF'
          time_namelookup:  %{time_namelookup}s\n
          time_connect:  %{time_connect}s\n
          time_starttransfer:  %{time_starttransfer}s\n
          time_total:  %{time_total}s\n
          EOF

      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://context8.io
          uploadArtifacts: true
          temporaryPublicStorage: true

  rollback:
    name: Rollback (Manual)
    runs-on: ubuntu-latest
    needs: [deploy, post-deploy-tests]
    if: failure()
    environment:
      name: production-rollback

    steps:
      - name: Trigger rollback
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            core.setFailed('Deployment failed! Manual rollback required.');
            console.log('Visit Vercel dashboard to rollback: https://vercel.com');
