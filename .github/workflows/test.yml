name: CI - Test & Lint

on:
  push:
    branches: ['**']
  pull_request:
    branches: [develop, main]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: TypeScript compilation
        run: npm run build --if-present || npx tsc --noEmit

      - name: Run ESLint
        run: npm run lint --if-present || echo "Lint skipped"
        continue-on-error: true

      - name: Run unit tests
        run: npm test -- --run
        env:
          CI: true

      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        if: hashFiles('playwright.config.ts') != ''

      - name: Run E2E tests
        run: npm run test:e2e --if-present || echo "E2E tests skipped"
        if: hashFiles('playwright.config.ts') != ''
        continue-on-error: true

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            coverage/
            test-results/
          retention-days: 30

      - name: Comment test results on PR
        uses: daun/playwright-report-comment@v3
        if: always() && github.event_name == 'pull_request'
        with:
          report-path: test-results
        continue-on-error: true

  build:
    name: Build Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: https://api-staging.context8.io
          NODE_ENV: production

      - name: Check bundle size
        run: |
          echo "Build completed successfully!"
          du -sh .next/ || echo "No .next directory"

  status:
    name: Status Check
    runs-on: ubuntu-latest
    needs: [test, build]
    if: always()

    steps:
      - name: Check test status
        if: needs.test.result == 'failure'
        run: |
          echo "::error::Tests failed"
          exit 1

      - name: Check build status
        if: needs.build.result == 'failure'
        run: |
          echo "::error::Build failed"
          exit 1

      - name: Success
        if: needs.test.result == 'success' && needs.build.result == 'success'
        run: echo "All checks passed! âœ…"
