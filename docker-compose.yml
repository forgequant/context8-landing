version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: context8-landing:latest
    container_name: context8-app
    restart: unless-stopped
    # Port only needed for direct access (not required with Caddy)
    # Uncomment for local testing without Caddy:
    # ports:
    #   - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://api.context8.io}
      - PORT=3000
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - web
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  caddy:
    image: caddy:2-alpine
    container_name: context8-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"  # HTTP/3
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - DOMAIN=${DOMAIN:-context8.io}
    depends_on:
      app:
        condition: service_healthy
    networks:
      - web
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

networks:
  web:
    driver: bridge
    name: context8-network

volumes:
  caddy_data:
    name: context8_caddy_data
  caddy_config:
    name: context8_caddy_config
